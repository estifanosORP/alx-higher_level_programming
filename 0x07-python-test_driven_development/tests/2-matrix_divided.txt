==========================================
Test cases for the 2-matrix_divided module
==========================================

Import the function in the module
>>> matrix_divided =  __import__("2-matrix_divided").matrix_divided
>>> matrix_divided(45, 5)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


Test2: Matrix must be list of nums
>>> matrix_divided([1, 2, "try"], 4)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


Test3: Each row of the matrx must be of equal size
>>> matrix_divided([[1, 2, 4], [1, 3]], 10)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


Test4: Div must be a number
>>> matrix_divided([[1, 2, 4], [1, 4, 3]], "3")
Traceback (most recent call last):
...
TypeError: div must be a number


Test5: Div can not be zero
>>> matrix_divided([[1, 2, 4], [1, 4, 3]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero


Test6: Case that works
>>> matrix_divided([[1, 2, 4], [1, 4, 3]], 10)
[[0.1, 0.2, 0.4], [0.1, 0.4, 0.3]]

